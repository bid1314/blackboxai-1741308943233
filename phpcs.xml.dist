<?xml version="1.0"?>
<ruleset name="Dallas Embroidery Designer">
    <description>Coding standards for Dallas Embroidery Designer plugin</description>

    <!-- What to scan -->
    <file>.</file>
    <exclude-pattern>/vendor/</exclude-pattern>
    <exclude-pattern>/node_modules/</exclude-pattern>
    <exclude-pattern>/tests/</exclude-pattern>
    <exclude-pattern>/dist/</exclude-pattern>
    <exclude-pattern>*.min.js</exclude-pattern>
    <exclude-pattern>*.min.css</exclude-pattern>
    <exclude-pattern>*.asset.php</exclude-pattern>

    <!-- How to scan -->
    <arg value="sp"/> <!-- Show sniff and progress -->
    <arg name="basepath" value="."/> <!-- Strip the file paths down to the relevant bit -->
    <arg name="colors"/>
    <arg name="extensions" value="php"/>
    <arg name="parallel" value="8"/>

    <!-- Rules: Check PHP version compatibility -->
    <config name="testVersion" value="7.4-"/>
    <rule ref="PHPCompatibilityWP"/>

    <!-- Rules: WordPress Coding Standards -->
    <config name="minimum_supported_wp_version" value="5.0"/>
    <rule ref="WordPress">
        <!-- Allow short array syntax -->
        <exclude name="Generic.Arrays.DisallowShortArraySyntax"/>
        <!-- Allow short ternary operator -->
        <exclude name="WordPress.PHP.DisallowShortTernary"/>
    </rule>

    <!-- Rules: WordPress Core -->
    <rule ref="WordPress-Core"/>
    <rule ref="WordPress-Docs"/>
    <rule ref="WordPress-Extra"/>

    <!-- Allow . in hook names -->
    <rule ref="WordPress.NamingConventions.ValidHookName">
        <properties>
            <property name="additionalWordDelimiters" value="."/>
        </properties>
    </rule>

    <!-- Verify that the text_domain is set to the desired text-domain -->
    <rule ref="WordPress.WP.I18n">
        <properties>
            <property name="text_domain" type="array" value="dallas-embroidery-designer"/>
        </properties>
    </rule>

    <!-- Verify that no WP functions are used which are deprecated or removed -->
    <rule ref="WordPress.WP.DeprecatedFunctions">
        <properties>
            <property name="minimum_supported_version" value="5.0"/>
        </properties>
    </rule>

    <!-- Allow PSR-4 class names in class-*.php files -->
    <rule ref="WordPress.Files.FileName">
        <properties>
            <property name="strict_class_file_names" value="false"/>
        </properties>
    </rule>

    <!-- Set minimum supported WooCommerce version -->
    <config name="minimum_supported_wc_version" value="5.0"/>

    <!-- Custom rule properties -->
    <rule ref="WordPress.WP.GlobalVariablesOverride">
        <properties>
            <property name="customVariables" type="array" value="dallas_designer"/>
        </properties>
    </rule>

    <!-- Third-party code -->
    <exclude-pattern>/vendor/*</exclude-pattern>
    <exclude-pattern>/node_modules/*</exclude-pattern>
    <exclude-pattern>/tests/*</exclude-pattern>

    <!-- Allow multiple PHP statements in the same line for array definitions -->
    <rule ref="Generic.Formatting.MultipleStatementAlignment">
        <properties>
            <property name="maxPadding" value="50"/>
        </properties>
    </rule>

    <!-- Allow short array syntax -->
    <rule ref="Generic.Arrays.DisallowLongArraySyntax"/>

    <!-- Enforce Yoda conditions -->
    <rule ref="WordPress.PHP.YodaConditions"/>

    <!-- Enforce WordPress array format -->
    <rule ref="WordPress.Arrays.ArrayDeclarationSpacing"/>

    <!-- Enforce WordPress hook documentation -->
    <rule ref="WordPress.NamingConventions.PrefixAllGlobals">
        <properties>
            <property name="prefixes" type="array" value="dallas_designer"/>
        </properties>
    </rule>

    <!-- Enforce proper sanitization -->
    <rule ref="WordPress.Security.ValidatedSanitizedInput"/>
    <rule ref="WordPress.Security.NonceVerification"/>
</ruleset>
